#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : enable
#extension GL_EXT_shader_explicit_arithmetic_types_int64 : require // we need use [uint64_t] key word
#extension GL_EXT_scalar_block_layout : enable
#extension GL_EXT_buffer_reference2 : require
#extension GL_GOOGLE_include_directive : enable

#include "random.glsl"

struct HitPayload
{
    vec3 color;
    uint seed;
};

layout(location = 0) rayPayloadInEXT HitPayload HIT_PAY_LOAD;

// layout(location = 1) rayPayloadEXT bool isShadowed;

layout(push_constant) uniform PUSH_CONSTANT
{
    float alpha;
    float accumulateWeight;
    int frame;
}
pushConstant;

void main()
{
    if (Random(HIT_PAY_LOAD.seed) > pushConstant.alpha)
    {
        ignoreIntersectionEXT;
    }
}
